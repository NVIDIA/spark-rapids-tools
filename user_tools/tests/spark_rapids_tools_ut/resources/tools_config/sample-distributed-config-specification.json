{
  "$defs": {
    "DependencyType": {
      "description": "Represents the dependency type for the tools' java cmd.",
      "enum": [
        "jar",
        "archive"
      ],
      "title": "DependencyType",
      "type": "string"
    },
    "DependencyVerification": {
      "additionalProperties": false,
      "description": "The verification information of a runtime dependency required by the tools' java cmd.",
      "properties": {
        "size": {
          "default": 0,
          "description": "The size of the dependency file.",
          "examples": [
            3265393
          ],
          "title": "Size",
          "type": "integer"
        },
        "file_hash": {
          "$ref": "#/$defs/FileHashAlgorithm",
          "default": null,
          "description": "The hash function to verify the file.",
          "examples": [
            {
              "algorithm": "md5",
              "value": "bc9bf7fedde0e700b974426fbd8d869c"
            }
          ]
        }
      },
      "title": "DependencyVerification",
      "type": "object"
    },
    "DistributedSubmissionConfig": {
      "additionalProperties": false,
      "description": "Configuration class for distributed submission mode",
      "properties": {
        "remote_cache_dir": {
          "default": [
            "hdfs:///tmp/spark_rapids_distributed_tools_cache"
          ],
          "description": "Remote cache directory where the intermediate output data from each task will be stored. Default is hdfs:///tmp/spark_rapids_distributed_tools_cache.",
          "title": "Remote Cache Dir",
          "type": "string"
        },
        "spark_properties": {
          "description": "List of Spark properties to be used for the Spark session.",
          "examples": [
            {
              "name": "spark.executor.memory",
              "value": "4g"
            },
            {
              "name": "spark.executor.cores",
              "value": "4"
            }
          ],
          "items": {
            "$ref": "#/$defs/SparkProperty"
          },
          "title": "Spark Properties",
          "type": "array"
        }
      },
      "title": "DistributedSubmissionConfig",
      "type": "object"
    },
    "FileHashAlgorithm": {
      "description": "Represents a file hash algorithm and its value. Used for verification against an existing file.",
      "properties": {
        "algorithm": {
          "$ref": "#/$defs/HashAlgorithm"
        },
        "value": {
          "title": "Value",
          "type": "string"
        }
      },
      "required": [
        "algorithm",
        "value"
      ],
      "title": "FileHashAlgorithm",
      "type": "object"
    },
    "HashAlgorithm": {
      "description": "Represents the supported hashing algorithms",
      "enum": [
        "md5",
        "sha1",
        "sha256",
        "sha512"
      ],
      "title": "HashAlgorithm",
      "type": "string"
    },
    "RuntimeDependency": {
      "additionalProperties": false,
      "description": "Holds information about a runtime dependency required by the tools' java cmd.",
      "properties": {
        "name": {
          "description": "The name of the dependency.",
          "examples": [
            "Spark-3.5.0",
            "AWS Java SDK"
          ],
          "title": "Name",
          "type": "string"
        },
        "uri": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "format": "file-path",
              "type": "string"
            }
          ],
          "description": "The location of the dependency file. It can be a URL to a remote web/storage or a file path.",
          "examples": [
            "file:///path/to/file.tgz",
            "https://mvn-url/24.08.1/rapids-4-spark-tools_2.12-24.08.1.jar",
            "gs://bucket-name/path/to/file.jar"
          ],
          "title": "Uri"
        },
        "dependency_type": {
          "$ref": "#/$defs/RuntimeDependencyType",
          "description": "Specifies the dependency type to determine how the item is processed. For example, jar files are appended to the java classpath while archive files such as spark are extracted first before adding subdirectory _/jars/* to the classpath."
        },
        "verification": {
          "$ref": "#/$defs/DependencyVerification",
          "default": null,
          "description": "Optional specification to verify the dependency file."
        }
      },
      "required": [
        "name",
        "uri"
      ],
      "title": "RuntimeDependency",
      "type": "object"
    },
    "RuntimeDependencyType": {
      "additionalProperties": false,
      "description": "Defines the type of runtime dependency required by the tools' java cmd.",
      "properties": {
        "dep_type": {
          "$ref": "#/$defs/DependencyType",
          "description": "The type of the dependency."
        },
        "relative_path": {
          "default": null,
          "description": "Specifies the relative path from within the archive file which will be added to the java cmd. Requires field dep_type to be set to (archive).",
          "examples": [
            "jars/*"
          ],
          "title": "Relative Path",
          "type": "string"
        }
      },
      "required": [
        "dep_type"
      ],
      "title": "RuntimeDependencyType",
      "type": "object"
    },
    "SparkProperty": {
      "additionalProperties": false,
      "description": "Represents a single Spark property with a name and value.",
      "properties": {
        "name": {
          "description": "Name of the Spark property, e.g., \"spark.executor.memory\".",
          "title": "Name",
          "type": "string"
        },
        "value": {
          "description": "Value of the Spark property, e.g., \"4g\".",
          "title": "Value",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "title": "SparkProperty",
      "type": "object"
    },
    "ToolsRuntimeConfig": {
      "additionalProperties": false,
      "description": "The runtime configurations of the tools as defined by the user.",
      "properties": {
        "dependencies": {
          "description": "The list of runtime dependencies required by the tools java cmd. Set this list to specify Spark binaries along with any other required jar files (i.e., hadoop jars, gcp connectors,..etc.). When specified, the default predefined dependencies will be ignored.",
          "items": {
            "$ref": "#/$defs/RuntimeDependency"
          },
          "title": "Dependencies",
          "type": "array"
        },
        "jvm_heap_size": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The maximum heap size of the JVM in gigabytes. If not set, a default value is calculated based on host memory.",
          "examples": [
            16,
            32
          ],
          "title": "Jvm Heap Size"
        },
        "jvm_threads": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Number of threads to use for parallel processing on the eventlogs batch. If not set, a default value is calculated based on host cores and heap size.",
          "examples": [
            4,
            8
          ],
          "title": "Jvm Threads"
        }
      },
      "required": [
        "dependencies"
      ],
      "title": "ToolsRuntimeConfig",
      "type": "object"
    }
  },
  "additionalProperties": false,
  "description": "Container for the distributed submission mode configurations. This is the parts of the configuration\nthat can be passed as an input to the CLI",
  "properties": {
    "api_version": {
      "description": "The version of the API that the tools are using. This is used to test the compatibility of the configuration file against the current tools release.",
      "examples": [
        "1.0"
      ],
      "maximum": 1.0,
      "minimum": 1.0,
      "title": "Api Version",
      "type": "number"
    },
    "runtime": {
      "anyOf": [
        {
          "$ref": "#/$defs/ToolsRuntimeConfig"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Configuration related to the runtime environment of the tools."
    },
    "submission": {
      "anyOf": [
        {
          "$ref": "#/$defs/DistributedSubmissionConfig"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Configuration related to distributed submission mode."
    }
  },
  "required": [
    "api_version"
  ],
  "title": "DistributedToolsConfig",
  "type": "object"
}
