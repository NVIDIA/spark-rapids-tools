# Copyright (c) 2024-2025, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "spark-rapids-user-tools"
authors = [
  { name="NVIDIA Corporation" , email="spark-rapids-support@nvidia.com" },
]
description = "A simple wrapper process around cloud service providers to run tools for the RAPIDS Accelerator for Apache Spark."
readme = "README.md"
requires-python = ">=3.10,<3.13"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
license = "Apache-2.0"
# see https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for list of supported licenses
dependencies = [
    # numpy-2.2.6 supports python [3.10, 3.13]. numpy2.3.0 dropped support for Python 3.10.
    "numpy>=2.2.6",
    # For moustache templates
    "chevron==0.14.0",
    "fastprogress==1.0.3",
    "fastcore==1.7.28",
    # Python [3.9, 3.13]
    "fire==0.7.0",
    # pandas python [3.9, 3.13]
    "pandas==2.3.0",
    # pyYaml-6.0.2 supports python[3.9, 3.13]
    "pyYAML>=6.0.2",
    # This is used to resolve env-variable in yaml files. It requires between 5.0 and 6.0
    "pyaml-env==1.2.2",
    "tabulate==0.9.0",
    # Supports Python 3.9+
    "importlib-resources==6.5.2",
    # supports python [3.9, 3.13]
    "requests==2.32.4",
    # Supports Python [3.9, 3.13]
    "packaging==25.0",
    # supports python[3.8, 3.13]
    "certifi==2025.6.15",
    # supports python[3.9, 3.13]
    "urllib3==2.5.0",
    # Used as a syntax highlighter for the CLI STDOUT. Python [3.9, 3.12]
    "pygments==2.19.2",
    # used to apply validator on objects and models.
    # "2.9.2" contains from_json method.
    # Python [3.9, 3.13]
    "pydantic==2.11.7",
    # used to help pylint understand pydantic. Python [3.9, 3.12]
    "pylint-pydantic==0.3.5",
    # used for common API to access remote filesystems like local/s3/gcs/hdfs
    # pin to 20.0.0 which supports python [3.9, 3.13]
    "pyarrow==20.0.0",
    # used for ADLS filesystem implementation
    # Python [3.9, 3.12]
    "azure-storage-blob==12.25.1",
    # used for ADLS filesystem implementation. Python [3.9, 3.13]
    "adlfs==2024.12.0",
    # used for spinner animation
    "progress==1.6.1",
    # used for model estimations python [3.9-3.13]
    "xgboost==3.0.2",
    # used for model interpretability. python [3.9, 3.13]
    "shap==0.48.0",
    # dependency of shap, python [3.10, 3.13]
    "scikit-learn==1.7.0",
    # used for retrieving available memory on the host
    "psutil==7.0.0",
    # pyspark for distributed computing
    "pyspark>=3.4.2,<4.0.0",
    # Jproperties used to handle Java properties file (added for the Tools API)
    "jproperties==2.1.2",
    # used for model training.  Python [3.10, 3.13]
    "optuna==4.4.0",
    "optuna-integration==4.4.0"
]
dynamic=["entry-points", "version"]

[project.scripts]
spark_rapids_user_tools = "spark_rapids_pytools.wrapper:main"
spark_rapids = "spark_rapids_tools.cmdli.tools_cli:main"
spark_rapids_dev = "spark_rapids_tools.cmdli.dev_cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
[tool.setuptools.packages.find]
where = ["src"]
[tool.setuptools.dynamic]
version = {attr = "spark_rapids_pytools.__version__"}
[tool.setuptools.package-data]
"*"= ["*.json", "*.yaml", "*.ms", "*.sh", "*.tgz", "*.properties","*.jar"]
[tool.poetry]
repository = "https://github.com/NVIDIA/spark-rapids-tools/tree/main"
[project.optional-dependencies]
test = [
    "tox", 'pytest', 'cli_test_helpers', 'behave',
    # use flak-8 plugin for pydantic
    'flake8-pydantic',
    # Use pylint for static code analysis.
    # Set specific version to avoid breaking test with newer pylint releases. Python [3.9-3.13]
    'pylint==3.3.7'
]
qualx = [
    # optional dependencies for qualx plotting
    "holoviews",
    "matplotlib",
    "seaborn"
]
