{
  "dependencies": {
      "deployMode": {
        "LOCAL": [
          {
            "name":  "Apache Spark",
            "uri": "https://archive.apache.org/dist/spark/spark-3.3.1/spark-3.3.1-bin-hadoop3.tgz",
            "type": "archive",
            "relativePath": "jars/*",
            "sha512": "769db39a560a95fd88b58ed3e9e7d1e92fb68ee406689fb4d30c033cb5911e05c1942dcc70e5ec4585df84e80aabbc272b9386a208debda89522efff1335c8ff",
            "size": 299350810
          },
          {
            "name":  "Hadoop Azure",
            "uri": "https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-azure/3.3.4/hadoop-azure-3.3.4.jar",
            "type": "jar",
            "md5": "1ec4cbd59548412010fe1515070eef73",
            "sha1": "a23f621bca9b2100554150f6b0b521f94b8b419e",
            "size": 574116
          }
        ]
      }
    },
  "environment": {
    "//description": "Define the metadata related to the system, prerequisites, and configurations",
    "envParams": ["profile", "deployMode"],
    "//initialConfigList": "represents the list of the configurations that need to be loaded first",
    "initialConfigList": ["profile", "cliConfigFile", "azureConfigFile"],
    "//loadedConfigProps": "list of properties read by the configParser",
    "loadedConfigProps": ["region", "output"],
    "cliConfig": {
      "envVariables": [
        {
          "envVariableKey": "DATABRICKS_CONFIG_FILE",
          "confProperty": "cliConfigFile",
          "defaultValue": "~/.databrickscfg"
        },
        {
          "//comment": "the token is not being used for now",
          "envVariableKey": "DATABRICKS_HOST",
          "confProperty": "databricksHost"
        },
        {
          "//comment": "the token is not being used for now",
          "envVariableKey": "DATABRICKS_TOKEN",
          "confProperty": "databricksToken"
        },
        {
          "envVariableKey": "RAPIDS_USER_TOOLS_DATABRICKS_PROFILE",
          "confProperty": "profile",
          "defaultValue": "DEFAULT"
        },
        {
          "envVariableKey": "AZURE_CONFIG_DIR",
          "confProperty": "azureConfigFile",
          "defaultValue": "~/.azure/config"
        },
        {
          "envVariableKey": "AZURE_DEFAULTS_LOCATION",
          "confProperty": "region"
        }
      ],
      "confProperties": {
        "//lookupList_description": "Define the list of properties needed for the run to be successful",
        "propertiesMap": [],
        "credentialsMap": []
      }
    },
    "cmdRunnerProperties": {
      "systemPrerequisites": ["databricks", "az"],
      "//description": "define the properties passed to the CMD runner to be set as env-vars",
      "inheritedProps": ["profile"],
      "cliPiggyBackEnvVars": {
        "//description": "Holds information about the variables that will be attached to the command runner",
        "definedVars": [
          {
            "varLabel": "profile",
            "//confProperty": "which configuration property used to set the value of that var",
            "confProperty": "profile",
            "//varKey": "the variable key used in the CLI. Note that we need this in case that the ENV variables define above are not the same as the system env vars",
            "//varKey_2": "add the RAPIDS_USER_TOOLS_DATABRICKS_PROFILE to all cli commands instead of adding it as an argument",
            "varKey": "RAPIDS_USER_TOOLS_DATABRICKS_PROFILE"
          }
        ]
      },
      "cliPiggyBackArgs": {
        "//description": "Holds information about list of arguments that's appended to some SDK commands",
        "definedArgs": [
          {
            "argLabel": "profile",
            "//sdkCommand_description": "the current profile used in databricks CLI",
            "sdkCommand": "databricks",
            "argKey": "profile",
            "confProperty": "profile"
          }
        ]
      },
      "rapidsJobs": {
        "LOCAL": {
          "definedVars": []
        }
      }
    }
  },
  "pricing": {
    "catalog": {
      "onlineResources": [
        {
          "resourceKey": "databricks-standard-catalog",
          "onlineURL": "https://www.databricks.com/product/pricing/product-pricing/instance-types",
          "//localFile": "the name of the local file",
          "localFile": "databricks-standard-catalog.json",
          "backupArchive": {
            "//description": "We use this archive as a backup. It is stored in the resources",
            "archiveName": "databricks-standard-catalog.json"
          }
        },
        {
          "resourceKey": "databricks-premium-catalog",
          "onlineURL": "https://www.databricks.com/product/pricing/product-pricing/instance-types",
          "//localFile": "the name of the local file",
          "localFile": "databricks-premium-catalog.json",
          "backupArchive": {
            "//description": "We use this archive as a backup. It is stored in the resources",
            "archiveName": "databricks-premium-catalog.json"
          }
        },
        {
          "resourceKey": "databricks-enterprise-catalog",
          "onlineURL": "https://www.databricks.com/product/pricing/product-pricing/instance-types",
          "//localFile": "the name of the local file",
          "localFile": "databricks-enterprise-catalog.json",
          "backupArchive": {
            "//description": "We use this archive as a backup. It is stored in the resources",
            "archiveName": "databricks-enterprise-catalog.json"
          }
        },
        {
          "resourceKey": "azure-catalog",
          "onlineURL": "https://azure.microsoft.com/en-us/pricing/details/databricks/#pricing",
          "//localFile": "the name of the file after downloading",
          "localFile": "TODO",
          "backupArchive": {
            "//description-1": "In case the file is stuck, we use this archive as a backup.",
            "//description-2": "It is stored in the resources",
            "archiveName": "TODO"
          }
        }
      ]
    }
  },
  "gpuConfigs": {
    "user-tools": {
      "supportedGpuInstances": {
      }
    }
  },
  "clusterSpecs": {
    "minWorkerNodes": 2
  }
}
  